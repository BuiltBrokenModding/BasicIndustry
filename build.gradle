buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

plugins {
  id 'com.matthewprenger.cursegradle' version '1.0.1'
}

apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/buildScripts/index.gradle'
apply plugin: 'forge'
apply plugin: 'curseforge'
apply from: 'https://raw.githubusercontent.com/BuiltBrokenModding/BuiltBrokenScripts/buildScripts/scripts/forge/deps.gradle'


println "Current Minecraft version = " + minecraft.apiVersion

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		//include '**/*.lang'
		include '**/*.info'
		include '**/*.properties'

		expand 'version': project.version, 'mcversion': project.minecraft.version
		// replace version and MCVersion
	}
    

	// copy everything else, thats not text
	from(sourceSets.main.resources.srcDirs) {
		exclude '**/*.info'
		exclude '**/*.properties'
	}
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

minecraft {    
    replace "required-after:VoltzEngine", "required-after:VoltzEngine" + voltz_engine_version
}

dependencies 
{
    if (project.getProperty("bambooshortPlanName") == "BBM-Dev"){
    compile "dev.builtbroken.voltzengine:VoltzEngine:1.7.10-0.6.2+:deobf-dev"
    }
    else
    {
    compile "com.builtbroken.voltzengine:VoltzEngine:1.7.10-0.6.2+:deobf"}
    testRuntime 'org.slf4j:slf4j-simple:1.7.10'
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}